{"version":3,"file":"static/js/134.cf0d946c.chunk.js","mappings":"uNAAA,IAAMA,EAAW,gCACXC,EAAU,mCACVC,EAAe,6B,gKCGN,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAHc,wCAW/B,WAAiCC,GAAjC,8EACEA,EAAMC,iBADR,kBAG2BC,EAAAA,EAAAA,IAAA,UAClBd,EAAAA,GADkB,8BACYK,EAAaU,IAC5C,UAFmB,oBAGRd,EAAAA,KANnB,OAGUe,EAHV,OAQIP,EAAYO,EAASC,KAAKC,SAR9B,gDAUIC,QAAQC,IAAR,MAVJ,0DAX+B,sBAyB/B,OACE,4BACE,kBAAMC,SA3BqB,4CA2B3B,WACE,kBACEC,KAAK,OACLC,MACiC,OAA/BlB,EAAaU,IAAI,UACb,GACAV,EAAaU,IAAI,UAEvBS,KAAK,eACLC,YAAY,iBACZC,SAhCmB,SAAAd,GACF,KAAvBA,EAAMe,OAAOJ,MACTjB,EAAgB,CAAC,GACjBA,EAAgB,CAAEsB,OAAQhB,EAAMe,OAAOJ,OAC5C,KA8BK,mBAAQD,KAAK,SAAb,uBAEDd,EAASqB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACZ,UAAC,KAAD,CAAMC,GAAE,UAAKF,GAAeG,MAAO,CAAEC,KAAMzB,GAA3C,WACE,wBAAKoB,KACL,gBACEM,IAAG,UAAKlC,EAAAA,GAAL,eAAwB8B,GAC3BK,IAAI,GACJC,MAAM,MACNC,OAAO,UANaR,EADZ,MAanB,C","sources":["Constants/constants.js","pages/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f7d7a9b2e374f67b5381a74b61fb7dc2'\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/';\nexport {BASE_URL, API_KEY, BASE_IMG_URL};","import axios from 'axios';\nimport { BASE_URL, API_KEY, BASE_IMG_URL } from '../Constants/constants';\nimport { useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filmInfo, setFilmInfo] = useState([]);\n  const location = useLocation();\n\n  const handleSearchQuerry = event => {\n    event.target.value === ''\n      ? setSearchParams({})\n      : setSearchParams({ querry: event.target.value });\n  };\n\n  async function handleSearchMovie(event) {\n    event.preventDefault();\n    try {\n      const response = await axios.get(\n        `${BASE_URL}search/movie?query=${searchParams.get(\n          'querry'\n        )}&api_key=${API_KEY}`\n      );\n      setFilmInfo(response.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSearchMovie}>\n        <input\n          type=\"text\"\n          value={\n            searchParams.get('querry') === null\n              ? ''\n              : searchParams.get('querry')\n          }\n          name=\"searchQuerry\"\n          placeholder=\"search a movie\"\n          onChange={handleSearchQuerry}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {filmInfo.map(({ title, id, poster_path }) => (\n        <Link to={`${id}`} key={id} state={{ from: location }}>\n          <h1>{title}</h1>\n          <img\n            src={`${BASE_IMG_URL}w500${poster_path}`}\n            alt=\"\"\n            width=\"500\"\n            height=\"500\"\n          />\n        </Link>\n      ))}\n    </div>\n  );\n}\n"],"names":["BASE_URL","API_KEY","BASE_IMG_URL","Movies","useSearchParams","searchParams","setSearchParams","useState","filmInfo","setFilmInfo","location","useLocation","event","preventDefault","axios","get","response","data","results","console","log","onSubmit","type","value","name","placeholder","onChange","target","querry","map","title","id","poster_path","to","state","from","src","alt","width","height"],"sourceRoot":""}