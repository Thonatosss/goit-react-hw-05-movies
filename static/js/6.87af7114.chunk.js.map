{"version":3,"file":"static/js/6.87af7114.chunk.js","mappings":"qNAAA,IAAMA,EAAW,gCACXC,EAAU,mCACVC,EAAe,6B,0ICEfC,EAAWC,EAAAA,EAAAA,GAAH,6IAWRC,GAAeD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,4NAWZG,EAAYH,EAAAA,EAAAA,GAAH,uF,+KCvBTI,EAAsBJ,EAAAA,EAAAA,IAAH,yHAOnBK,EAAOL,EAAAA,EAAAA,KAAH,8FAKJM,EAAkBN,EAAAA,EAAAA,MAAH,4HASfO,EAAYP,EAAAA,EAAAA,OAAH,6D,iBCZA,SAASQ,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAHc,wCAW/B,WAAiCC,GAAjC,8EACEA,EAAMC,iBADR,kBAG2BC,EAAAA,EAAAA,IAAA,UAClBvB,EAAAA,GADkB,8BACYc,EAAaU,IAC5C,UAFmB,oBAGRvB,EAAAA,KANnB,OAGUwB,EAHV,OAQIP,EAAYO,EAASC,KAAKC,SAR9B,gDAUIC,QAAQC,IAAR,MAVJ,0DAX+B,sBAyB/B,OACE,UAACrB,EAAD,YACE,UAACC,EAAD,CAAMqB,SA3BqB,4CA2B3B,WACE,SAACpB,EAAD,CACEqB,KAAK,OACLC,MACiC,OAA/BlB,EAAaU,IAAI,UACb,GACAV,EAAaU,IAAI,UAEvBS,KAAK,eACLC,YAAY,iBACZC,SAhCmB,SAAAd,GACF,KAAvBA,EAAMe,OAAOJ,MACTjB,EAAgB,CAAC,GACjBA,EAAgB,CAAEsB,OAAQhB,EAAMe,OAAOJ,OAC5C,KA8BK,SAACrB,EAAD,CAAWoB,KAAK,SAAhB,wBAEF,SAAC,KAAD,UACGd,EAASqB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACZ,yBACE,UAAC,KAAD,CAAcC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMzB,GAA1C,WACE,SAAC,KAAD,UAAYoB,KACZ,gBACEM,IAAG,UAAK3C,EAAAA,GAAL,eAAwBuC,GAC3BK,IAAI,GACJC,MAAM,MACNC,OAAO,YAPJR,EADG,QAgBrB,C","sources":["Constants/constants.js","pages/Home.styled.jsx","pages/Movies.styled.jsx","pages/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f7d7a9b2e374f67b5381a74b61fb7dc2'\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/';\nexport {BASE_URL, API_KEY, BASE_IMG_URL};","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\n\nconst FilmList = styled.ul`\n\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-wrap: wrap;\ngap: 20px;\nlist-style: none;\n\n`\n\nconst FilmListItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column-reverse;\n  background-color: #c9d6df;\n  width: 230px;\n  height: 320px;\n  text-decoration: none;\n`;\n\nconst FilmTitle = styled.h2`\n  font-size: 20px;\n  text-align: center;\n  color: black;\n  \n`;\n\n\n\nexport { FilmListItem, FilmList, FilmTitle };","import styled from \"@emotion/styled\";\n\n\nconst SearchFormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst SearchFormInput = styled.input`\n  width: 700px;\n  height: 40px;\n  margin-right: 20px;\n  padding-left: 40px;\n  font-size: 20px;\n`;\n\n\nconst SearchBtn = styled.button`\nheight: 45px;\npadding: 0 10px;\n\n\n`\n\n\n\nexport { SearchFormContainer, SearchFormInput, SearchBtn, Form };","import axios from 'axios';\nimport { BASE_URL, API_KEY, BASE_IMG_URL } from '../Constants/constants';\nimport { useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport {\n  SearchBtn,\n  SearchFormContainer,\n  SearchFormInput,\n  Form,\n} from './Movies.styled';\nimport { FilmList, FilmListItem, FilmTitle } from './Home.styled';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filmInfo, setFilmInfo] = useState([]);\n  const location = useLocation();\n\n  const handleSearchQuerry = event => {\n    event.target.value === ''\n      ? setSearchParams({})\n      : setSearchParams({ querry: event.target.value });\n  };\n\n  async function handleSearchMovie(event) {\n    event.preventDefault();\n    try {\n      const response = await axios.get(\n        `${BASE_URL}search/movie?query=${searchParams.get(\n          'querry'\n        )}&api_key=${API_KEY}`\n      );\n      setFilmInfo(response.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <SearchFormContainer>\n      <Form onSubmit={handleSearchMovie}>\n        <SearchFormInput\n          type=\"text\"\n          value={\n            searchParams.get('querry') === null\n              ? ''\n              : searchParams.get('querry')\n          }\n          name=\"searchQuerry\"\n          placeholder=\"search a movie\"\n          onChange={handleSearchQuerry}\n        />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </Form>\n      <FilmList>\n        {filmInfo.map(({ title, id, poster_path }) => (\n          <li key={id}>\n            <FilmListItem to={`${id}`} state={{ from: location }}>\n              <FilmTitle>{title}</FilmTitle>\n              <img\n                src={`${BASE_IMG_URL}w500${poster_path}`}\n                alt=\"\"\n                width=\"200\"\n                height=\"230\"\n              />\n            </FilmListItem>\n          </li>\n        ))}\n      </FilmList>\n    </SearchFormContainer>\n  );\n}\n"],"names":["BASE_URL","API_KEY","BASE_IMG_URL","FilmList","styled","FilmListItem","Link","FilmTitle","SearchFormContainer","Form","SearchFormInput","SearchBtn","Movies","useSearchParams","searchParams","setSearchParams","useState","filmInfo","setFilmInfo","location","useLocation","event","preventDefault","axios","get","response","data","results","console","log","onSubmit","type","value","name","placeholder","onChange","target","querry","map","title","id","poster_path","to","state","from","src","alt","width","height"],"sourceRoot":""}