{"version":3,"file":"static/js/6.0ee1b1d2.chunk.js","mappings":"qNAAA,IAAMA,EAAW,gCACXC,EAAU,mCACVC,EAAe,6B,uLCEfC,EAAsBC,EAAAA,EAAAA,IAAH,yHAOnBC,EAAOD,EAAAA,EAAAA,KAAH,8FAKJE,EAAkBF,EAAAA,EAAAA,MAAH,4HASfG,EAAYH,EAAAA,EAAAA,OAAH,6DAQTI,EAAaJ,EAAAA,EAAAA,GAAH,qJASVK,EAAiBL,EAAAA,EAAAA,GAAH,0LAUdM,EAAcN,EAAAA,EAAAA,GAAH,oFAMXO,GAAYP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,2J,SCvCA,SAASS,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAJ+B,wCAU/B,WAAiCC,GAAjC,0EACEA,EAAMC,iBAENT,EAAgB,CAAEU,MAAOJ,IACS,OAA9BP,EAAaY,IAAI,SAJvB,0CAM6BC,EAAAA,EAAAA,IAAA,UAClB5B,EAAAA,GADkB,8BACYe,EAAaY,IAC5C,SAFmB,oBAGR1B,EAAAA,KATrB,OAMY4B,EANZ,OAWMV,EAAYU,EAASC,KAAKC,SAXhC,kDAaMC,QAAQC,IAAR,MAbN,2DAV+B,sBA8C/B,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,uFACoC,OAA9BnB,EAAaY,IAAI,SADvB,0CAG6BC,EAAAA,EAAAA,IAAA,UAClB5B,EAAAA,GADkB,8BACYe,EAAaY,IAC5C,SAFmB,oBAGR1B,EAAAA,KANrB,OAGY4B,EAHZ,OAQMV,EAAYU,EAASC,KAAKC,SARhC,gDAUMC,QAAQC,IAAR,MAVN,0DAFc,uBAAC,WAAD,wBAgBdE,EACD,GAAE,CAACpB,KAEF,UAACZ,EAAD,YACE,UAACE,EAAD,CAAM+B,SAhDqB,4CAgD3B,WACE,SAAC9B,EAAD,CACE+B,KAAK,OACLC,MAAOhB,EACPiB,KAAK,cACLC,YAAY,iBACZC,SAhDkB,SAAAjB,GACxBD,EAAeC,EAAMkB,OAAOJ,MAC7B,KAgDK,SAAC/B,EAAD,CAAW8B,KAAK,SAAhB,wBAEF,SAAC7B,EAAD,UACGU,EAASyB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACZ,SAACrC,EAAD,WACE,UAACE,EAAD,CAAWoC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAM7B,GAAvC,WACE,SAACV,EAAD,UAAckC,KACd,gBACEM,IACGJ,EAAD,UAEO5C,EAAAA,GAFP,gBAE2B4C,GAF3B,wFAIFK,IAAI,GACJC,MAAM,MACNC,OAAO,YAXQR,EADT,QAoBrB,C","sources":["components/constants/constants.js","pages/Movies.styled.jsx","pages/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f7d7a9b2e374f67b5381a74b61fb7dc2'\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/';\nexport { BASE_URL, API_KEY, BASE_IMG_URL };","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\n\nconst SearchFormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst SearchFormInput = styled.input`\n  width: 700px;\n  height: 40px;\n  margin-right: 20px;\n  padding-left: 40px;\n  font-size: 20px;\n`;\n\n\nconst SearchBtn = styled.button`\nheight: 45px;\npadding: 0 10px;\n\n\n`\n\n\nconst MoviesList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nconst MoviesListItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background-color: #c9d6df;\n  width: 230px;\n  height: 320px;\n`;\n\nconst MoviesTitle = styled.h2`\n  font-size: 20px;\n  text-align: center;\n  color: black;\n`;\n\nconst MovieLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column-reverse;\n`;\n\n\nexport {\n  SearchFormContainer,\n  SearchFormInput,\n  SearchBtn,\n  Form,\n  MoviesTitle,\n  MoviesList,\n  MoviesListItem,\n  MovieLink,\n};","import axios from 'axios';\nimport {\n  BASE_URL,\n  API_KEY,\n  BASE_IMG_URL,\n} from 'components/constants/constants';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport {\n  SearchBtn,\n  SearchFormContainer,\n  SearchFormInput,\n  Form,\n  MoviesList,\n  MoviesListItem,\n  MoviesTitle,\n  MovieLink,\n} from './Movies.styled';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filmInfo, setFilmInfo] = useState([]);\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchQuery = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  async function handleSearchMovie(event) {\n    event.preventDefault();\n\n    setSearchParams({ query: searchQuery });\n    if (searchParams.get('query') !== null) {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}search/movie?query=${searchParams.get(\n            'query'\n          )}&api_key=${API_KEY}`\n        );\n        setFilmInfo(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  useEffect(() => {\n\n    async function handleSearchMovie() {\n      if (searchParams.get('query') !== null) {\n        try {\n          const response = await axios.get(\n            `${BASE_URL}search/movie?query=${searchParams.get(\n              'query'\n            )}&api_key=${API_KEY}`\n          );\n          setFilmInfo(response.data.results);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n    handleSearchMovie();\n  }, [searchParams]);\n  return (\n    <SearchFormContainer>\n      <Form onSubmit={handleSearchMovie}>\n        <SearchFormInput\n          type=\"text\"\n          value={searchQuery}\n          name=\"searchQuery\"\n          placeholder=\"Search a movie\"\n          onChange={handleSearchQuery}\n        />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </Form>\n      <MoviesList>\n        {filmInfo.map(({ title, id, poster_path }) => (\n          <MoviesListItem key={id}>\n            <MovieLink to={`${id}`} state={{ from: location }}>\n              <MoviesTitle>{title}</MoviesTitle>\n              <img\n                src={\n                  !poster_path\n                    ? `https://www.bartender.com.ua/wp-content/themes/bartender/images/default-thumbnail.jpg`\n                    : `${BASE_IMG_URL}/w500${poster_path}`\n                }\n                alt=\"\"\n                width=\"200\"\n                height=\"230\"\n              />\n            </MovieLink>\n          </MoviesListItem>\n        ))}\n      </MoviesList>\n    </SearchFormContainer>\n  );\n}\n"],"names":["BASE_URL","API_KEY","BASE_IMG_URL","SearchFormContainer","styled","Form","SearchFormInput","SearchBtn","MoviesList","MoviesListItem","MoviesTitle","MovieLink","Link","Movies","useSearchParams","searchParams","setSearchParams","useState","filmInfo","setFilmInfo","location","useLocation","searchQuery","setSearchQuery","event","preventDefault","query","get","axios","response","data","results","console","log","useEffect","handleSearchMovie","onSubmit","type","value","name","placeholder","onChange","target","map","title","id","poster_path","to","state","from","src","alt","width","height"],"sourceRoot":""}